#lang racket

(define (reverse lista)
  (let func ((temp lista) (empty_list '()))
  (if (null? temp) (list->string empty_list)
      (func (cdr temp) (cons (car temp) empty_list))
        )
    )
  )

(define (final-boss frase)
  (let fx ((word (string->list frase)) (invertido '()) (palabras '()))
    (cond
      ((null? word) (list->string invertido))
      ((equal? (car word) #\.) palabras)
      ((equal? (car word) #\space) (cons (reverse invertido) palabras))
      (else (fx (cdr word) (cons (car word) invertido) palabras ))
    )
   ) 
  )

;(final-boss "Hola mundo")